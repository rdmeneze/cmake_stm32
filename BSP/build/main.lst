ARM GAS  /tmp/ccRt9r62.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB135:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** 
  23:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  24:Src/main.c    **** /* USER CODE BEGIN Includes */
  25:Src/main.c    **** 
  26:Src/main.c    **** /* USER CODE END Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  29:Src/main.c    **** /* USER CODE BEGIN PTD */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/ccRt9r62.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PD */
  35:Src/main.c    **** /* USER CODE END PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PM */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  43:Src/main.c    **** UART_HandleTypeDef huart2;
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN PV */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PV */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  50:Src/main.c    **** void SystemClock_Config(void);
  51:Src/main.c    **** static void MX_GPIO_Init(void);
  52:Src/main.c    **** static void MX_USART2_UART_Init(void);
  53:Src/main.c    **** /* USER CODE BEGIN PFP */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN 0 */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /**
  63:Src/main.c    ****   * @brief  The application entry point.
  64:Src/main.c    ****   * @retval int
  65:Src/main.c    ****   */
  66:Src/main.c    **** int main(void)
  67:Src/main.c    **** {
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* USER CODE END 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Src/main.c    ****   HAL_Init();
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE BEGIN Init */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE END Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Configure the system clock */
  82:Src/main.c    ****   SystemClock_Config();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccRt9r62.s 			page 3


  89:Src/main.c    ****   MX_GPIO_Init();
  90:Src/main.c    ****   MX_USART2_UART_Init();
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END 2 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Infinite loop */
  96:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  97:Src/main.c    ****   while (1)
  98:Src/main.c    ****   {
  99:Src/main.c    ****     /* USER CODE END WHILE */
 100:Src/main.c    **** 
 101:Src/main.c    ****     /* USER CODE BEGIN 3 */
 102:Src/main.c    ****   }
 103:Src/main.c    ****   /* USER CODE END 3 */
 104:Src/main.c    **** }
 105:Src/main.c    **** 
 106:Src/main.c    **** /**
 107:Src/main.c    ****   * @brief System Clock Configuration
 108:Src/main.c    ****   * @retval None
 109:Src/main.c    ****   */
 110:Src/main.c    **** void SystemClock_Config(void)
 111:Src/main.c    **** {
 112:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 113:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 114:Src/main.c    **** 
 115:Src/main.c    ****   /** Configure the main internal regulator output voltage
 116:Src/main.c    ****   */
 117:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 118:Src/main.c    ****   {
 119:Src/main.c    ****     Error_Handler();
 120:Src/main.c    ****   }
 121:Src/main.c    ****   /** Configure LSE Drive Capability
 122:Src/main.c    ****   */
 123:Src/main.c    ****   HAL_PWR_EnableBkUpAccess();
 124:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 125:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 126:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 127:Src/main.c    ****   */
 128:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 129:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 130:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 131:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 132:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 140:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 141:Src/main.c    ****   {
 142:Src/main.c    ****     Error_Handler();
 143:Src/main.c    ****   }
 144:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Src/main.c    ****   */
ARM GAS  /tmp/ccRt9r62.s 			page 4


 146:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 151:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Src/main.c    **** 
 153:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     Error_Handler();
 156:Src/main.c    ****   }
 157:Src/main.c    ****   /** Enable MSI Auto calibration
 158:Src/main.c    ****   */
 159:Src/main.c    ****   HAL_RCCEx_EnableMSIPLLMode();
 160:Src/main.c    **** }
 161:Src/main.c    **** 
 162:Src/main.c    **** /**
 163:Src/main.c    ****   * @brief USART2 Initialization Function
 164:Src/main.c    ****   * @param None
 165:Src/main.c    ****   * @retval None
 166:Src/main.c    ****   */
 167:Src/main.c    **** static void MX_USART2_UART_Init(void)
 168:Src/main.c    **** {
 169:Src/main.c    **** 
 170:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 171:Src/main.c    **** 
 172:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 177:Src/main.c    ****   huart2.Instance = USART2;
 178:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 179:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 180:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 181:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 182:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 183:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 184:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 185:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 186:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 187:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 188:Src/main.c    ****   {
 189:Src/main.c    ****     Error_Handler();
 190:Src/main.c    ****   }
 191:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 194:Src/main.c    **** 
 195:Src/main.c    **** }
 196:Src/main.c    **** 
 197:Src/main.c    **** /**
 198:Src/main.c    ****   * @brief GPIO Initialization Function
 199:Src/main.c    ****   * @param None
 200:Src/main.c    ****   * @retval None
 201:Src/main.c    ****   */
 202:Src/main.c    **** static void MX_GPIO_Init(void)
ARM GAS  /tmp/ccRt9r62.s 			page 5


 203:Src/main.c    **** {
  28              		.loc 1 203 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 204:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 204 3 view .LVU1
  42              		.loc 1 204 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* GPIO Ports Clock Enable */
 207:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 207 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 207 3 view .LVU4
  52              		.loc 1 207 3 view .LVU5
  53 0010 164B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 207 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 207 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 207 3 view .LVU8
 208:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 208 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 208 3 view .LVU10
  68              		.loc 1 208 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F00102 		orr	r2, r2, #1
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 208 3 view .LVU12
  73 002c DA6C     		ldr	r2, [r3, #76]
  74 002e 02F00102 		and	r2, r2, #1
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 208 3 view .LVU13
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
ARM GAS  /tmp/ccRt9r62.s 			page 6


  79              		.loc 1 208 3 view .LVU14
 209:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 209 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 209 3 view .LVU16
  83              		.loc 1 209 3 view .LVU17
  84 0036 DA6C     		ldr	r2, [r3, #76]
  85 0038 42F00202 		orr	r2, r2, #2
  86 003c DA64     		str	r2, [r3, #76]
  87              		.loc 1 209 3 view .LVU18
  88 003e DB6C     		ldr	r3, [r3, #76]
  89 0040 03F00203 		and	r3, r3, #2
  90 0044 0293     		str	r3, [sp, #8]
  91              		.loc 1 209 3 view .LVU19
  92 0046 029B     		ldr	r3, [sp, #8]
  93              	.LBE6:
  94              		.loc 1 209 3 view .LVU20
 210:Src/main.c    **** 
 211:Src/main.c    ****   /*Configure GPIO pin Output Level */
 212:Src/main.c    ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  95              		.loc 1 212 3 view .LVU21
  96 0048 094D     		ldr	r5, .L3+4
  97 004a 2246     		mov	r2, r4
  98 004c 0821     		movs	r1, #8
  99 004e 2846     		mov	r0, r5
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 213:Src/main.c    **** 
 214:Src/main.c    ****   /*Configure GPIO pin : LD3_Pin */
 215:Src/main.c    ****   GPIO_InitStruct.Pin = LD3_Pin;
 102              		.loc 1 215 3 view .LVU22
 103              		.loc 1 215 23 is_stmt 0 view .LVU23
 104 0054 0823     		movs	r3, #8
 105 0056 0393     		str	r3, [sp, #12]
 216:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 106              		.loc 1 216 3 is_stmt 1 view .LVU24
 107              		.loc 1 216 24 is_stmt 0 view .LVU25
 108 0058 0123     		movs	r3, #1
 109 005a 0493     		str	r3, [sp, #16]
 217:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 110              		.loc 1 217 3 is_stmt 1 view .LVU26
 111              		.loc 1 217 24 is_stmt 0 view .LVU27
 112 005c 0594     		str	r4, [sp, #20]
 218:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 218 3 is_stmt 1 view .LVU28
 114              		.loc 1 218 25 is_stmt 0 view .LVU29
 115 005e 0694     		str	r4, [sp, #24]
 219:Src/main.c    ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 219 3 is_stmt 1 view .LVU30
 117 0060 03A9     		add	r1, sp, #12
 118 0062 2846     		mov	r0, r5
 119 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL1:
 220:Src/main.c    **** 
 221:Src/main.c    **** }
 121              		.loc 1 221 1 is_stmt 0 view .LVU31
 122 0068 09B0     		add	sp, sp, #36
ARM GAS  /tmp/ccRt9r62.s 			page 7


 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 12
 125              		@ sp needed
 126 006a 30BD     		pop	{r4, r5, pc}
 127              	.L4:
 128              		.align	2
 129              	.L3:
 130 006c 00100240 		.word	1073876992
 131 0070 00040048 		.word	1207960576
 132              		.cfi_endproc
 133              	.LFE135:
 135              		.section	.text.Error_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	Error_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	Error_Handler:
 144              	.LFB136:
 222:Src/main.c    **** 
 223:Src/main.c    **** /* USER CODE BEGIN 4 */
 224:Src/main.c    **** 
 225:Src/main.c    **** /* USER CODE END 4 */
 226:Src/main.c    **** 
 227:Src/main.c    **** /**
 228:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 229:Src/main.c    ****   * @retval None
 230:Src/main.c    ****   */
 231:Src/main.c    **** void Error_Handler(void)
 232:Src/main.c    **** {
 145              		.loc 1 232 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ Volatile: function does not return.
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 233:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 234:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 235:Src/main.c    ****   __disable_irq();
 151              		.loc 1 235 3 view .LVU33
 152              	.LBB7:
 153              	.LBI7:
 154              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  /tmp/ccRt9r62.s 			page 8


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  /tmp/ccRt9r62.s 			page 9


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  /tmp/ccRt9r62.s 			page 10


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccRt9r62.s 			page 11


 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 155              		.loc 2 207 27 view .LVU34
 156              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 157              		.loc 2 209 3 view .LVU35
 158              		.syntax unified
 159              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 160 0000 72B6     		cpsid i
 161              	@ 0 "" 2
 162              		.thumb
 163              		.syntax unified
 164              	.L6:
 165              	.LBE8:
 166              	.LBE7:
 236:Src/main.c    ****   while (1)
 167              		.loc 1 236 3 discriminator 1 view .LVU36
 237:Src/main.c    ****   {
 238:Src/main.c    ****   }
 168              		.loc 1 238 3 discriminator 1 view .LVU37
 236:Src/main.c    ****   while (1)
 169              		.loc 1 236 9 discriminator 1 view .LVU38
 170 0002 FEE7     		b	.L6
 171              		.cfi_endproc
 172              	.LFE136:
 174              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 175              		.align	1
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	MX_USART2_UART_Init:
 182              	.LFB134:
 168:Src/main.c    **** 
 183              		.loc 1 168 1 view -0
ARM GAS  /tmp/ccRt9r62.s 			page 12


 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 08B5     		push	{r3, lr}
 188              	.LCFI3:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
 177:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 192              		.loc 1 177 3 view .LVU40
 177:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 193              		.loc 1 177 19 is_stmt 0 view .LVU41
 194 0002 0B48     		ldr	r0, .L11
 195 0004 0B4B     		ldr	r3, .L11+4
 196 0006 0360     		str	r3, [r0]
 178:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 197              		.loc 1 178 3 is_stmt 1 view .LVU42
 178:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 198              		.loc 1 178 24 is_stmt 0 view .LVU43
 199 0008 4FF4E133 		mov	r3, #115200
 200 000c 4360     		str	r3, [r0, #4]
 179:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 201              		.loc 1 179 3 is_stmt 1 view .LVU44
 179:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 202              		.loc 1 179 26 is_stmt 0 view .LVU45
 203 000e 0023     		movs	r3, #0
 204 0010 8360     		str	r3, [r0, #8]
 180:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 205              		.loc 1 180 3 is_stmt 1 view .LVU46
 180:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 206              		.loc 1 180 24 is_stmt 0 view .LVU47
 207 0012 C360     		str	r3, [r0, #12]
 181:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 208              		.loc 1 181 3 is_stmt 1 view .LVU48
 181:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 209              		.loc 1 181 22 is_stmt 0 view .LVU49
 210 0014 0361     		str	r3, [r0, #16]
 182:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 211              		.loc 1 182 3 is_stmt 1 view .LVU50
 182:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 212              		.loc 1 182 20 is_stmt 0 view .LVU51
 213 0016 0C22     		movs	r2, #12
 214 0018 4261     		str	r2, [r0, #20]
 183:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 215              		.loc 1 183 3 is_stmt 1 view .LVU52
 183:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 216              		.loc 1 183 25 is_stmt 0 view .LVU53
 217 001a 8361     		str	r3, [r0, #24]
 184:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 218              		.loc 1 184 3 is_stmt 1 view .LVU54
 184:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 219              		.loc 1 184 28 is_stmt 0 view .LVU55
 220 001c C361     		str	r3, [r0, #28]
 185:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 221              		.loc 1 185 3 is_stmt 1 view .LVU56
 185:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 222              		.loc 1 185 30 is_stmt 0 view .LVU57
ARM GAS  /tmp/ccRt9r62.s 			page 13


 223 001e 0362     		str	r3, [r0, #32]
 186:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 224              		.loc 1 186 3 is_stmt 1 view .LVU58
 186:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 225              		.loc 1 186 38 is_stmt 0 view .LVU59
 226 0020 4362     		str	r3, [r0, #36]
 187:Src/main.c    ****   {
 227              		.loc 1 187 3 is_stmt 1 view .LVU60
 187:Src/main.c    ****   {
 228              		.loc 1 187 7 is_stmt 0 view .LVU61
 229 0022 FFF7FEFF 		bl	HAL_UART_Init
 230              	.LVL2:
 187:Src/main.c    ****   {
 231              		.loc 1 187 6 view .LVU62
 232 0026 00B9     		cbnz	r0, .L10
 195:Src/main.c    **** 
 233              		.loc 1 195 1 view .LVU63
 234 0028 08BD     		pop	{r3, pc}
 235              	.L10:
 189:Src/main.c    ****   }
 236              		.loc 1 189 5 is_stmt 1 view .LVU64
 237 002a FFF7FEFF 		bl	Error_Handler
 238              	.LVL3:
 239              	.L12:
 240 002e 00BF     		.align	2
 241              	.L11:
 242 0030 00000000 		.word	.LANCHOR0
 243 0034 00440040 		.word	1073759232
 244              		.cfi_endproc
 245              	.LFE134:
 247              		.section	.text.SystemClock_Config,"ax",%progbits
 248              		.align	1
 249              		.global	SystemClock_Config
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	SystemClock_Config:
 256              	.LFB133:
 111:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 257              		.loc 1 111 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 88
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 00B5     		push	{lr}
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 4
 264              		.cfi_offset 14, -4
 265 0002 97B0     		sub	sp, sp, #92
 266              	.LCFI5:
 267              		.cfi_def_cfa_offset 96
 112:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 268              		.loc 1 112 3 view .LVU66
 112:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 269              		.loc 1 112 22 is_stmt 0 view .LVU67
 270 0004 4422     		movs	r2, #68
 271 0006 0021     		movs	r1, #0
ARM GAS  /tmp/ccRt9r62.s 			page 14


 272 0008 05A8     		add	r0, sp, #20
 273 000a FFF7FEFF 		bl	memset
 274              	.LVL4:
 113:Src/main.c    **** 
 275              		.loc 1 113 3 is_stmt 1 view .LVU68
 113:Src/main.c    **** 
 276              		.loc 1 113 22 is_stmt 0 view .LVU69
 277 000e 0023     		movs	r3, #0
 278 0010 0093     		str	r3, [sp]
 279 0012 0193     		str	r3, [sp, #4]
 280 0014 0293     		str	r3, [sp, #8]
 281 0016 0393     		str	r3, [sp, #12]
 282 0018 0493     		str	r3, [sp, #16]
 117:Src/main.c    ****   {
 283              		.loc 1 117 3 is_stmt 1 view .LVU70
 117:Src/main.c    ****   {
 284              		.loc 1 117 7 is_stmt 0 view .LVU71
 285 001a 4FF40070 		mov	r0, #512
 286 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 287              	.LVL5:
 117:Src/main.c    ****   {
 288              		.loc 1 117 6 view .LVU72
 289 0022 0028     		cmp	r0, #0
 290 0024 31D1     		bne	.L18
 123:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 291              		.loc 1 123 3 is_stmt 1 view .LVU73
 292 0026 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 293              	.LVL6:
 124:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 294              		.loc 1 124 3 view .LVU74
 295 002a 1B4A     		ldr	r2, .L21
 296 002c D2F89030 		ldr	r3, [r2, #144]
 297 0030 23F01803 		bic	r3, r3, #24
 298 0034 C2F89030 		str	r3, [r2, #144]
 128:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 299              		.loc 1 128 3 view .LVU75
 128:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 300              		.loc 1 128 36 is_stmt 0 view .LVU76
 301 0038 1423     		movs	r3, #20
 302 003a 0593     		str	r3, [sp, #20]
 129:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 303              		.loc 1 129 3 is_stmt 1 view .LVU77
 129:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 304              		.loc 1 129 30 is_stmt 0 view .LVU78
 305 003c 0123     		movs	r3, #1
 306 003e 0793     		str	r3, [sp, #28]
 130:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 307              		.loc 1 130 3 is_stmt 1 view .LVU79
 130:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 308              		.loc 1 130 30 is_stmt 0 view .LVU80
 309 0040 0B93     		str	r3, [sp, #44]
 131:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 310              		.loc 1 131 3 is_stmt 1 view .LVU81
 131:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 311              		.loc 1 131 41 is_stmt 0 view .LVU82
 312 0042 0022     		movs	r2, #0
 313 0044 0C92     		str	r2, [sp, #48]
ARM GAS  /tmp/ccRt9r62.s 			page 15


 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 314              		.loc 1 132 3 is_stmt 1 view .LVU83
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 315              		.loc 1 132 35 is_stmt 0 view .LVU84
 316 0046 6022     		movs	r2, #96
 317 0048 0D92     		str	r2, [sp, #52]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 318              		.loc 1 133 3 is_stmt 1 view .LVU85
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 319              		.loc 1 133 34 is_stmt 0 view .LVU86
 320 004a 0222     		movs	r2, #2
 321 004c 0F92     		str	r2, [sp, #60]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 322              		.loc 1 134 3 is_stmt 1 view .LVU87
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 323              		.loc 1 134 35 is_stmt 0 view .LVU88
 324 004e 1093     		str	r3, [sp, #64]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 325              		.loc 1 135 3 is_stmt 1 view .LVU89
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 326              		.loc 1 135 30 is_stmt 0 view .LVU90
 327 0050 1193     		str	r3, [sp, #68]
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 328              		.loc 1 136 3 is_stmt 1 view .LVU91
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 329              		.loc 1 136 30 is_stmt 0 view .LVU92
 330 0052 1023     		movs	r3, #16
 331 0054 1293     		str	r3, [sp, #72]
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 332              		.loc 1 137 3 is_stmt 1 view .LVU93
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 333              		.loc 1 137 30 is_stmt 0 view .LVU94
 334 0056 0723     		movs	r3, #7
 335 0058 1393     		str	r3, [sp, #76]
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 336              		.loc 1 138 3 is_stmt 1 view .LVU95
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 337              		.loc 1 138 30 is_stmt 0 view .LVU96
 338 005a 1492     		str	r2, [sp, #80]
 139:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 339              		.loc 1 139 3 is_stmt 1 view .LVU97
 139:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 340              		.loc 1 139 30 is_stmt 0 view .LVU98
 341 005c 1592     		str	r2, [sp, #84]
 140:Src/main.c    ****   {
 342              		.loc 1 140 3 is_stmt 1 view .LVU99
 140:Src/main.c    ****   {
 343              		.loc 1 140 7 is_stmt 0 view .LVU100
 344 005e 05A8     		add	r0, sp, #20
 345 0060 FFF7FEFF 		bl	HAL_RCC_OscConfig
 346              	.LVL7:
 140:Src/main.c    ****   {
 347              		.loc 1 140 6 view .LVU101
 348 0064 98B9     		cbnz	r0, .L19
 146:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 349              		.loc 1 146 3 is_stmt 1 view .LVU102
 146:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccRt9r62.s 			page 16


 350              		.loc 1 146 31 is_stmt 0 view .LVU103
 351 0066 0F23     		movs	r3, #15
 352 0068 0093     		str	r3, [sp]
 148:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 353              		.loc 1 148 3 is_stmt 1 view .LVU104
 148:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 354              		.loc 1 148 34 is_stmt 0 view .LVU105
 355 006a 0323     		movs	r3, #3
 356 006c 0193     		str	r3, [sp, #4]
 149:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 357              		.loc 1 149 3 is_stmt 1 view .LVU106
 149:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 358              		.loc 1 149 35 is_stmt 0 view .LVU107
 359 006e 0023     		movs	r3, #0
 360 0070 0293     		str	r3, [sp, #8]
 150:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 361              		.loc 1 150 3 is_stmt 1 view .LVU108
 150:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 362              		.loc 1 150 36 is_stmt 0 view .LVU109
 363 0072 0393     		str	r3, [sp, #12]
 151:Src/main.c    **** 
 364              		.loc 1 151 3 is_stmt 1 view .LVU110
 151:Src/main.c    **** 
 365              		.loc 1 151 36 is_stmt 0 view .LVU111
 366 0074 0493     		str	r3, [sp, #16]
 153:Src/main.c    ****   {
 367              		.loc 1 153 3 is_stmt 1 view .LVU112
 153:Src/main.c    ****   {
 368              		.loc 1 153 7 is_stmt 0 view .LVU113
 369 0076 0121     		movs	r1, #1
 370 0078 6846     		mov	r0, sp
 371 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 372              	.LVL8:
 153:Src/main.c    ****   {
 373              		.loc 1 153 6 view .LVU114
 374 007e 40B9     		cbnz	r0, .L20
 159:Src/main.c    **** }
 375              		.loc 1 159 3 is_stmt 1 view .LVU115
 376 0080 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 377              	.LVL9:
 160:Src/main.c    **** 
 378              		.loc 1 160 1 is_stmt 0 view .LVU116
 379 0084 17B0     		add	sp, sp, #92
 380              	.LCFI6:
 381              		.cfi_remember_state
 382              		.cfi_def_cfa_offset 4
 383              		@ sp needed
 384 0086 5DF804FB 		ldr	pc, [sp], #4
 385              	.L18:
 386              	.LCFI7:
 387              		.cfi_restore_state
 119:Src/main.c    ****   }
 388              		.loc 1 119 5 is_stmt 1 view .LVU117
 389 008a FFF7FEFF 		bl	Error_Handler
 390              	.LVL10:
 391              	.L19:
 142:Src/main.c    ****   }
ARM GAS  /tmp/ccRt9r62.s 			page 17


 392              		.loc 1 142 5 view .LVU118
 393 008e FFF7FEFF 		bl	Error_Handler
 394              	.LVL11:
 395              	.L20:
 155:Src/main.c    ****   }
 396              		.loc 1 155 5 view .LVU119
 397 0092 FFF7FEFF 		bl	Error_Handler
 398              	.LVL12:
 399              	.L22:
 400 0096 00BF     		.align	2
 401              	.L21:
 402 0098 00100240 		.word	1073876992
 403              		.cfi_endproc
 404              	.LFE133:
 406              		.section	.text.main,"ax",%progbits
 407              		.align	1
 408              		.global	main
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	main:
 415              	.LFB132:
  67:Src/main.c    ****   /* USER CODE BEGIN 1 */
 416              		.loc 1 67 1 view -0
 417              		.cfi_startproc
 418              		@ Volatile: function does not return.
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 08B5     		push	{r3, lr}
 422              	.LCFI8:
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
  75:Src/main.c    **** 
 426              		.loc 1 75 3 view .LVU121
 427 0002 FFF7FEFF 		bl	HAL_Init
 428              	.LVL13:
  82:Src/main.c    **** 
 429              		.loc 1 82 3 view .LVU122
 430 0006 FFF7FEFF 		bl	SystemClock_Config
 431              	.LVL14:
  89:Src/main.c    ****   MX_USART2_UART_Init();
 432              		.loc 1 89 3 view .LVU123
 433 000a FFF7FEFF 		bl	MX_GPIO_Init
 434              	.LVL15:
  90:Src/main.c    ****   /* USER CODE BEGIN 2 */
 435              		.loc 1 90 3 view .LVU124
 436 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 437              	.LVL16:
 438              	.L24:
  97:Src/main.c    ****   {
 439              		.loc 1 97 3 discriminator 1 view .LVU125
 102:Src/main.c    ****   /* USER CODE END 3 */
 440              		.loc 1 102 3 discriminator 1 view .LVU126
  97:Src/main.c    ****   {
 441              		.loc 1 97 9 discriminator 1 view .LVU127
ARM GAS  /tmp/ccRt9r62.s 			page 18


 442 0012 FEE7     		b	.L24
 443              		.cfi_endproc
 444              	.LFE132:
 446              		.global	huart2
 447              		.section	.bss.huart2,"aw",%nobits
 448              		.align	2
 449              		.set	.LANCHOR0,. + 0
 452              	huart2:
 453 0000 00000000 		.space	132
 453      00000000 
 453      00000000 
 453      00000000 
 453      00000000 
 454              		.text
 455              	.Letext0:
 456              		.file 3 "/opt/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/_default_types.h"
 457              		.file 4 "/opt/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_stdint.h"
 458              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 459              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 460              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 461              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 462              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 463              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 464              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 465              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 466              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 467              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 468              		.file 15 "<built-in>"
ARM GAS  /tmp/ccRt9r62.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccRt9r62.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccRt9r62.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccRt9r62.s:130    .text.MX_GPIO_Init:000000000000006c $d
     /tmp/ccRt9r62.s:136    .text.Error_Handler:0000000000000000 $t
     /tmp/ccRt9r62.s:143    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccRt9r62.s:175    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccRt9r62.s:181    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccRt9r62.s:242    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccRt9r62.s:248    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccRt9r62.s:255    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccRt9r62.s:402    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccRt9r62.s:407    .text.main:0000000000000000 $t
     /tmp/ccRt9r62.s:414    .text.main:0000000000000000 main
     /tmp/ccRt9r62.s:452    .bss.huart2:0000000000000000 huart2
     /tmp/ccRt9r62.s:448    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
